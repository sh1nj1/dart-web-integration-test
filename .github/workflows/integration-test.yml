name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
    
    - name: Get dependencies
      run: dart pub get
    
    - name: Get test_target dependencies
      run: |
        cd test_target
        flutter pub get
    
    - name: Install Chrome and ChromeDriver
      run: |
        # Install Chrome
        wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
        
        # Get Chrome version
        CHROME_VERSION=$(google-chrome --version | sed 's/Google Chrome //' | cut -d. -f1)
        echo "Chrome version: $CHROME_VERSION"
        
        # Download matching ChromeDriver
        CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_$CHROME_VERSION")
        echo "ChromeDriver version: $CHROMEDRIVER_VERSION"
        
        wget -q "https://storage.googleapis.com/chrome-for-testing-public/$CHROMEDRIVER_VERSION/linux64/chromedriver-linux64.zip"
        unzip -q chromedriver-linux64.zip
        mkdir -p drivers
        mv chromedriver-linux64/chromedriver drivers/
        chmod +x drivers/chromedriver
        rm -rf chromedriver-linux64 chromedriver-linux64.zip
    
    - name: Run integration tests
      run: dart run bin/run_flutter_tests.dart test-dsl/sample_test.json
    
    - name: Upload screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-screenshots
        path: screenshots/
        if-no-files-found: ignore
