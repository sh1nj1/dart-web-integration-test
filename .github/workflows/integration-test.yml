name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
    
    - name: Get dependencies
      run: dart pub get
    
    - name: Get test_target dependencies
      run: |
        cd test_target
        flutter pub get
    
    - name: Setup Node.js for Puppeteer
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Chrome and ChromeDriver using Puppeteer
      run: |
        # Install latest Chrome
        npx --yes @puppeteer/browsers install chrome@latest
        
        # Get installed Chrome version
        CHROME_DIR=$(find chrome -name "chrome-linux64" -o -name "chrome-mac" -o -name "chrome-win" | head -1)
        CHROME_VERSION=$(basename $(dirname $CHROME_DIR))
        echo "Installed Chrome version directory: $CHROME_VERSION"
        
        # Install matching ChromeDriver
        npx --yes @puppeteer/browsers install chromedriver@latest
        
        # Create symlink for drivers directory
        mkdir -p drivers
        CHROMEDRIVER_PATH=$(find chromedriver -type f -name "chromedriver" | head -1)
        if [ -f "$CHROMEDRIVER_PATH" ]; then
          ln -s "$(pwd)/$CHROMEDRIVER_PATH" drivers/chromedriver
          chmod +x drivers/chromedriver
          echo "ChromeDriver linked to: $CHROMEDRIVER_PATH"
        fi
        
        # Set Chrome path for Flutter and create symlink
        CHROME_EXECUTABLE=$(find chrome -type f -name "chrome" | head -1)
        echo "CHROME_EXECUTABLE=$(pwd)/$CHROME_EXECUTABLE" >> $GITHUB_ENV
        
        # Create google-chrome symlink in PATH
        sudo ln -sf "$(pwd)/$CHROME_EXECUTABLE" /usr/local/bin/google-chrome
        google-chrome --version
    
    - name: Verify Chrome and ChromeDriver installation
      run: |
        echo "ChromeDriver path: $(realpath drivers/chromedriver)"
        drivers/chromedriver --version
        echo "Chrome executable: $CHROME_EXECUTABLE"
        google-chrome --version
        ls -la drivers/
    
    - name: Run integration tests with xvfb (headless display)
      env:
        DISPLAY: ':99'
      run: |
        # Start Xvfb
        Xvfb :99 -screen 0 1920x1080x24 &
        XVFB_PID=$!
        sleep 2
        
        # Run tests
        dart run bin/run_flutter_tests.dart test-dsl/sample_test.json
        TEST_EXIT_CODE=$?
        
        # Stop Xvfb
        kill $XVFB_PID || true
        
        exit $TEST_EXIT_CODE
    
    - name: Upload screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-screenshots
        path: screenshots/
        if-no-files-found: ignore
